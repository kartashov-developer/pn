Scripts @

defer, async [#learn-js] .
. Браузер доходит до |script| и не может дальше загружать DOM, т.к. сначала DOM 
  должен выполнить скрипт.
  . Отсюда появляются 2 проблемы: 
    1. объемный скрипт блокирует страницу;
    2. скрипты не видят DOM-элементы ниже себя.
. Оба скрипта загружаются асинхронно.
  defer .
  . Сначала загружает DOM, потом |script|. То есть пропускает данный скрипт, не 
    блокируя парсинг HTML.
  . Выполняется после загрузки DOM-дерева, но до |DOMContentLoaded|.
  . Скачиваются скрипты параллельно. Но запустится первым именно тот, который 
    стоит выше.
    |{js}  
    | <script defer src="long.js"></cript> // больше вес, дольше загрузка,
                                            // но запуститься первее
    | <script defer src="short.js"></script> // меньше вес, быстрее загрука,
                                             // но будет ждать скрипт выше
  async .
  . Скрипты независимы. Сразу загружает и отображает.
  . Никого не ждет и его никто не ждет.
  . |DOMContentLoaded| может загрузиться и до, и после.
  |{js}  
  | <script async src="long.js"></script> // дольше загрузка, загрузится вторым
  | <script async src="short.js"></script> // быстрее загрузка, будет первым
  async + defer .
  . |async| имеет приоритет над |defer|. При указании обоих атрибутов в 
    приоритете будет |async|.
  |{js}  
  | <script async defer src="asyncdefer1.js"></script> // загрузиться async

Reference @
[learn-js#] [https://learn.javascript.ru/script-async-defer]