Git @

Термины .
. `Репозиторий` — папка с файлами и настройками Git. Настройки расположены в 
  скрытой папке .git.
. `Форк (fork)` — копия репозитория. GitHub создаст копию фокрнутого 
  репозитория у вас на аккаунте. После этого в копию репозитория можно будет вносить изменения. Внесенные изменения можно предложить добавить в основной репозиторий через пул реквест.
. `Клонить (clone)` — скачивать репозиторий с удалённого сервера на 
  локальный компьютер.
. `Ветка / бранч (branch)` — это параллельная версия репозитория. Ветки можно 
  объединять между собой, например соединять параллельную версию с главной 
  версией репозитория.
. `Мастер (master)` — главная или основная ветка репозитория.
. `Коммит (commit)` — фиксация изменений или запись изменений в репозиторий. 
  Коммит происходит на локальном компьютере.
. `Пул (pull)` — получение последних изменений с удалённого сервера 
  репозитория.
. `Пуш (push)` — отправка всех неотправленных коммитов на удалённый сервер 
  репозитория.
. `Пул реквест (pull request)` — запрос на слияние форка репозитория с 
  основным репозиторием. Пул реквест может быть принят или отклонён владельцем репозитория.
. `Мёрдж (merge)` — слияние изменений из какой-либо ветки репозитория с любой 
  веткой этого же репозитория. Чаще всего —  слияние изменений из ветки репозитория с основной веткой репозитория.
. `Код ревью (code review)` — процесс проверки кода на соответствие 
  определённым требованиям, задачам и внешнему виду.
. `Обновиться из апстрима` — обновить свою локальную версию форка до 
  последней версии основного репозитория, от которого сделан форк.
. `Обновиться из ориджина` — обновить свою локальную версию репозитория до 
  последней удалённой версии этого репозитория.

Конфиг .
  Настройка имени .
  | git config --global user.name "YourName"
  Настройка электронной почты .
  | git config --global user.email "name@mail.ru"
  Проверить, что настройки сохранились (имя и электронная почта) .
  | git config --global --list

Локальные папки .
  Движение по папкам .
  |{zsh}pwd| - узнать полный пусть папки, в которой находимся
  |{zsh}cd ~| - зайти в папку профиля
  |{zsh}cd ..| - переместиться на папку назад
  |{zsh}cd /| - переместитьсяя на папку вперед
  |{zsh}cd -| - переместиться в прошлую папку
  О папках .
  |{zsh}ls| - файлы папки
  |{zsh}ls -1| - файлы папки, вывод в столбик
  |{zsh}ls -1 -a| - скрытые файлы папки, вывод в столбик
  Открыть папку .
  |{zsh}code .| - открыть в VSCode
  Создание папок и файлов .
  |{zsh}mkdir folder| - создать папку
  |{zsh}touch file.js| - создать файл
  
Использование git .
  Подготовить к работе репозиторий .
  |{zsh}git init| - появится скрытая папка |.git|(вся история изменений).
  |{zsh}git status| - проверяем состояние репозитория.
  |{zsh}git add .| - проиндексировать все файлы репозитория.
  |{zsh}git add css/button.css css/main.css| - проиндексировать оба файла.
  |{zsh}git commit -m "description"| - зафиксировать изменения(сохраниться).
  |{zsh}git diff| - посмотреть, что изменилось -> ?удаленное?, |добавленное|
  |{zsh}git log| - история коммитов
  |{zsh}git log -2| - последние два коммита
  |{zsh}git log --oneline -2| - последние два коммита в одну линию

Восстановить файл .
  Откатить файл до опреденного коммита .
  |{zsh}git checkout c73af1de0877fe25eb4648c2356742f253cc000d index.js|
