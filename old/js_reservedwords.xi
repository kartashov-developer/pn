[js] @

<break>: Используется для выхода из цикла или переключения на следующий вариант в операторе switch.
<case>: Используется в операторе switch для определения вариантов.
<catch>: Используется в операторе try...catch для перехвата и обработки ошибок.
<class>: Введено в ECMAScript 2015 (ES6) и используется для объявления классов в JavaScript.
<const>: Используется для объявления переменных с постоянным (неизменяемым) значением.
<continue>: Используется для перехода к следующей итерации цикла.
<debugger>: Используется для остановки выполнения кода и запуска отладчика.
<default>: Используется в операторе switch для задания действия по умолчанию.
<delete>: Используется для удаления свойств из объектов.
<do>: Используется для создания цикла do...while.
<else>: Используется вместе с оператором if для задания альтернативного блока кода.
<export>: Используется в модульной системе JavaScript для экспорта функций, объектов или значений из модуля.
<extends>: Используется для наследования классов в JavaScript.
<false>: Логическое значение "false".
<finally>: Используется в операторе try...catch для задания блока кода, который будет выполнен в любом случае после блока try или catch.
<for>: Используется для создания цикла for.
<function>: Используется для объявления функций.
<if>: Используется для выполнения условных операций.
<import>: Используется в модульной системе JavaScript для импорта функций, объектов или значений из других модулей.
<in>: Используется для проверки наличия свойства в объекте.
<instanceof>: Используется для проверки принадлежности объекта к определенному классу.
<let>: Используется для объявления блочно-областных переменных.
<new>: Используется для создания экземпляра объекта.
<null>: Специальное значение "null", которое указывает на отсутствие значения.
<return>: Используется для возврата значения из функции.
<super>: Используется внутри класса для обращения к родительскому классу.
<switch>: Используется для выполнения различных действий в зависимости от значения выражения.
<this>: Используется для обращения к текущему объекту.
<throw>: Используется для генерации исключения.
<true>: Логическое значение "true".
<try>: Используется для создания блока кода, в котором могут возникать исключения.
<typeof>: Используется для определения типа значения.
<var>: Используется для объявления переменных.
<void>: Используется для указания отсутствия значения.
<while>: Используется для создания цикла while.
<with>: Введено в ECMAScript 5, но в строгом режиме запрещено использование этого слова.