[js] @

. В JavaScript |7| логических операторов.
. Приоритет оператора |&&| больше, чем у ||||.
. Приоритет `!` является высшим.
. |&| - амперсанд.

|| .
ИЛИ .
! Находит первый |true|.
  Если такого нет, то возвращает последний {false}.
. Порядок работы:
  # Вычисляет все операнды слева направо.
  # Каждый операнд конвертирует в логический тип, если |true|, то
    останавливается и возвращает исходное значение этого операнда.
  # Если все операнды {false}, возвращает последний из них.
  Работа с логическими типами .
  |{js}
  | true || true // true
  | false || true // true
  | true || false // true
  | false(1) || false(2) // false(2)
  Примеры .
  |{js}
  | (1 || 0); // 1; 1=true
  | (true || 'string'); // true
  | (null || 1); // 1; null=0=false
  | (null || 0 || 1); // 1; null=0=false, 0=false
  | (null || undefined || 0); // 0, все ложны, возвращает последний
||= .
Присваивание ИЛИ .
. Принимает |2| операнда.
. Синтаксический сахар.
. Порядок работы:
  |{js} a ||= b
  # Вычисляет операнды слева направо.
  # Конвертирует {a} в логическое значение.
  # Если {a} = {false}, то присваивает {a} значение |b|.
  Примеры .
  |{js}
  | let helloMessage = null;
  | helloMessage ||= "Hello, World!";
  | console.log(helloMessage); // "Hello, World!"
  . {helloMessage=null=false}, а, раз {false}, то {helloMessage} присваивается
    строкове значение |"Hello, World!"|.

&& .
И .
! Находит первый {false}.
  Если такого нет, то возвращает последний |true|.
  Работа с логическими типами .
  |{js}
  | true(1) && true(2) // true(2)
  | false && true // false
  | true && false // false
  | false && false // false
&&= .
Присваивание N .
. Принимает |2| операнда.
. Синтаксический сахар.
. Порядок работы:
  |{js} a &&= b
  # Вычисляет операнды слева направо.
  # Конвертирует |a| в логическое значение.
  # Если |a| = |true|, то присваивает |a| значение |b|.
  |{js}
  | let greetingMessage = 'Hello';
  | greetingMessage &&= greetingMessage + ', World';
  | console.log(greetingMessage); // 'Hello, World'
  . |greetingMessage=string=true|, а, раз |true| то |helloMessage|
    присваивается строкове значение |"Hello, World!"|.

! .
НЕ .
. Оператор принимает один аргумент и выполняет следующие действия:
  # Сначала приводит аргумент к логическому типу |true|/{false}.
  # Затем возвращает противоположное значение.
  Примеры .
  |{js}
  | console.log( !true ); // false
  | console.log( !0 ); // true
  !! .
  . То есть первое |НЕ| преобразует значение в логическое значение и
    возвращает обратное, а второе НЕ снова инвертирует его. В конце мы имеем
    простое преобразование значения в логическое.
  |{js}
  | console.log( !!'string' ); // true
  | console.log( !!null ); // false
  | console.log( !!'' ); // false
    Boolean .
    |{js}
    | console.log( Boolean("непустая строка") ); // true
    | console.log( Boolean(null) ); // false


H1 .
  H2 .
    H3 .
      H4 .
        H5 .
          H6 .
