[js] @

| function showMessage(parameter) {
|  console.log("Hello World");
| };
function - ключевое слово объявления функции
showMessage - имя функции
parameter - передаваемые параметры функции
Локальные и глобальные переменные .
! Переменные, объявленные внутри функции, видны только внутри этой функции.
. У функций есть доступ к глобальным переменным(созданные вне функции). Она даже может изменять их значение.
Closure .
Замыкание .
. Это комбинация функции и лексического окружения, в котором функция была объявлена. Замыкание позволяет ф-ии сохранять доступ к переменным из внешней области видимости, даже после того, как эта область видимости была завершена.
. Когда ф-ия создается внутри другой ф-ии, она получает доступ к переменным своей внешней ф-ии, а также к переменным глобальной области видимости. В момент создания замыкания происходит 'захват'(capture) всех переменных, на которые есть ссылки внутри ф-ии.
| function outerFunction() {
|   let outerVariable = 'Hello';
|
|   function innerFunction() {
|     console.log(outerVariable);
|   }
|
|   return innerFunction;
| }
| let closure = outerFunction();
| closure(); // Выводит: Hello
Function Declaration .
Объявление .
. Объявление происходит с помощью ключевого слова |function|.
. Ф-ия, определенная подобным образом, может быть вызвана в любом месте кода, даже до самого объявления ф-ии[js_hoisting].
  Создается до выполнения скрипта.
. Обычно используются для создания именованных ф-ий, которые могут быть вызваны из любой части кода.
|{js}
| function sum(a, b) {
|   return a + b;
| }
Function Expression .
Выражение .
. Объявление происходит с также с помощью `ключевого` слова |function|, но затем ф-ия присваивается переменной.
. Ф-ия, определенная подобным образом, не поднимается[js_hoisting], поэтому должна быть определена до вызова.
. Часто используются для создания анонимных ф-ий или для присваивания ф-ий переменныи.
|{js}
| const sum = function(a, b) => {
|   return a + b;
| }
Стрелочные функции .
  Syntax .
  | () => {};
  . Не имеет своего контекста <this>.
Function Declaration VS Function Expression .
. Разница между объявлением и выражением заключается в:
  # во времени их создания;
    Объявление ф-ий и переменных поднимаются вверх, в начало области видимости, поэтому их можно использовать в коде до самого объявления.
  # доступности в коде.
    Вырпжения ф-ий и переменных создаются в момент выполнения кода, поэтому их можно использовать только после их определения.



