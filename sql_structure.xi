Данные в БД имеют определенную структуру. Таких структур 4: [#1] .
    Flat model/Плоская модель .
        . Предназначена для небольших, простых приложений.
        [https://www.integrate.io/blog/database-schema-examples/#two]

    Hierarchical model/Иерархическая модель данных .
        . Предназначена для вложенных данных, таких как XML & JSON.
        . Древовидная структура для работы с данными. У одного предка есть много наследников. Предок может иметь много потомков, а потомок только одного предка.
        . `Недостаток`:
            - объекты, находящиеся на одном уровне не имеют связи между собой, а имеют связь на предыдующий и следующий элемент. 
            - доступ к информации возможен только по вертикальной схеме.
        [https://www.integrate.io/blog/database-schema-examples/#three]

    Network model/Сетевая модель данных .
        . Полезна для картографирования и пространственных данных, а также для изображения рабочих процессов.
        . Сетевая структура расширяет иерархическую. Но теперь потомки могут иметь несколько предков.
        . `Недостаток`: 
            - сложность схемы БД, 
            - необходимость ссылок на каждую связь => увеличивается нагрузка на память.
        . `Операции`:
            . добавить
            . извлечь запись
            . обновить(изменить значение свойств)
            . удалить записи
            . переключить записи
            . исключить из групповых отношений
        [https://www.integrate.io/blog/database-schema-examples/#four]

    Объектно-ориентированная модель данных  .
        . Предназначена для высокопроизводительной обработки данных, имеющие сложную структуру.
        . БД, где информация хранится в виде объектов. 
        . Поддерживаются принципы ООП: |абстракция|, |инкапсуляция|, |наследование|.
        [https://www.integrate.io/blog/database-schema-examples/#five]

    Relational model/Реляционная модель данных  .
        relational_MD[] .
        . Структура представлена в виде таблиц. Она представлена в виде уникального набора столбцов и строк.
        . Место пересечения - |ячейка|. Таблица представляет собой данные сущности одного типа.
        . Название столбцов отображает тот набор свойств, которое содержит сущность и все значения в данном столбце имеют один тип. {lastName - всегда будет в типе 'string'}
        . Между таблицами могут существовать отношения.

    Star model/Модель данных "Звезда" .
        . Предназаначена для анализа больших, одномерных наборов данных.
        [https://www.integrate.io/blog/database-schema-examples/#six]

    Snowflake model/Модель данных "Снежинка" .
        . Предназначена для анализа больших, сложных наборов данных 
        [https://www.integrate.io/blog/database-schema-examples/#seven]

References @
. [1#] [https://www.integrate.io/blog/database-schema-examples/] .